#include <stdio.h>

int main() {
    int rows, cols, nonZeroElements;
    
    // Input the number of rows, columns, and non-zero elements
    printf("Enter number of rows, columns, and non-zero elements: ");
    scanf("%d %d %d", &rows, &cols, &nonZeroElements);
    
    // Arrays to store the original matrix in triplet form
    int triplet[nonZeroElements + 1][3]; // +1 to include the header
    int transpose[nonZeroElements + 1][3];
    
    // Input the triplet representation
    printf("Enter the triplet representation (row column value) for each non-zero element:\n");
    triplet[0][0] = rows;
    triplet[0][1] = cols;
    triplet[0][2] = nonZeroElements;
    
    for (int i = 1; i <= nonZeroElements; i++) {
        scanf("%d %d %d", &triplet[i][0], &triplet[i][1], &triplet[i][2]);
    }
    
    // Prepare the transpose triplet header
    transpose[0][0] = triplet[0][1]; // Rows of transpose = Columns of original
    transpose[0][1] = triplet[0][0]; // Columns of transpose = Rows of original
    transpose[0][2] = triplet[0][2]; // Non-zero elements remain the same
    
    int k = 1;
    
    // Transpose the matrix by swapping rows and columns
    for (int i = 1; i <= nonZeroElements; i++) {
        transpose[k][0] = triplet[i][1]; // Swap row and column
        transpose[k][1] = triplet[i][0];
        transpose[k][2] = triplet[i][2]; // Copy the value
        k++;
    }
    
    // Output the transposed triplet representation
    printf("Transposed triplet representation (row column value):\n");
    for (int i = 0; i <= nonZeroElements; i++) {
        printf("%d %d %d\n", transpose[i][0], transpose[i][1], transpose[i][2]);
    }
    
    return 0;
}
